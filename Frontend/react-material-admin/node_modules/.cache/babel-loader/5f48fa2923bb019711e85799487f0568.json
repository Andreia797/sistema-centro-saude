{"ast":null,"code":"import { CREATE_PACIENTE, RETRIEVE_PACIENTES, UPDATE_PACIENTE, DELETE_PACIENTE } from \"./actionTypes\";\nimport PacientesService from \"./PacientesService\";\nexport const createPaciente = (nome, cod_doc, morada, telefone, data_nasc, sexo, doc) => async dispatch => {\n  try {\n    const res = await PacientesService.create({\n      nome,\n      cod_doc,\n      morada,\n      telefone,\n      data_nasc,\n      sexo,\n      doc\n    });\n    dispatch({\n      type: CREATE_PACIENTE,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const retrievePacientes = () => async dispatch => {\n  try {\n    const res = await PacientesService.getAll();\n    dispatch({\n      type: RETRIEVE_PACIENTES,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updatePaciente = (id, data) => async dispatch => {\n  try {\n    const res = await PacientesService.update(id, data);\n    dispatch({\n      type: UPDATE_PACIENTE,\n      payload: data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const deletePaciente = id => async dispatch => {\n  try {\n    await PacientesService.delete(id);\n    dispatch({\n      type: DELETE_PACIENTE,\n      payload: {\n        id\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["CREATE_PACIENTE","RETRIEVE_PACIENTES","UPDATE_PACIENTE","DELETE_PACIENTE","PacientesService","createPaciente","nome","cod_doc","morada","telefone","data_nasc","sexo","doc","dispatch","res","create","type","payload","data","Promise","resolve","err","reject","retrievePacientes","getAll","console","log","updatePaciente","id","update","deletePaciente","delete"],"sources":["C:/Users/TOSHIBA/Desktop/AndreiaEIC/3ºAnoEIC/2º Simest/DAW/projectDAW_122756/CentroSaude/Frontend/react-material-admin/src/connections/pacientes/actions.js"],"sourcesContent":["import {\r\n\r\n    CREATE_PACIENTE,\r\n\r\n    RETRIEVE_PACIENTES,\r\n\r\n    UPDATE_PACIENTE,\r\n\r\n    DELETE_PACIENTE,\r\n\r\n} from \"./actionTypes\";\r\n\r\nimport PacientesService from \"./PacientesService\";\r\n\r\nexport const createPaciente =\r\n    (\r\n        nome,\r\n        cod_doc,\r\n        morada,\r\n        telefone,\r\n        data_nasc,\r\n        sexo,\r\n        doc,\r\n    ) => async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const res = await PacientesService.create({\r\n\r\n                nome,\r\n                cod_doc,\r\n                morada,\r\n                telefone,\r\n                data_nasc,\r\n                sexo,\r\n                doc,\r\n\r\n            });\r\n\r\n            dispatch({\r\n\r\n                type: CREATE_PACIENTE,\r\n\r\n                payload: res.data,\r\n\r\n            });\r\n\r\n            return Promise.resolve(res.data);\r\n\r\n        } catch (err) {\r\n\r\n            return Promise.reject(err);\r\n\r\n        }\r\n\r\n    };\r\n\r\nexport const retrievePacientes = () => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        const res = await PacientesService.getAll();\r\n\r\n        dispatch({\r\n\r\n            type: RETRIEVE_PACIENTES,\r\n\r\n            payload: res.data,\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        console.log(err);\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const updatePaciente = (id, data) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        const res = await PacientesService.update(id, data);\r\n\r\n        dispatch({\r\n\r\n            type: UPDATE_PACIENTE,\r\n\r\n            payload: data,\r\n\r\n        });\r\n\r\n        return Promise.resolve(res.data);\r\n\r\n    } catch (err) {\r\n\r\n        return Promise.reject(err);\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const deletePaciente = (id) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        await PacientesService.delete(id);\r\n\r\n        dispatch({\r\n\r\n            type: DELETE_PACIENTE,\r\n\r\n            payload: { id },\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        console.log(err);\r\n\r\n    }\r\n};"],"mappings":"AAAA,SAEIA,eAFJ,EAIIC,kBAJJ,EAMIC,eANJ,EAQIC,eARJ,QAUO,eAVP;AAYA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,OAAO,MAAMC,cAAc,GACvB,CACIC,IADJ,EAEIC,OAFJ,EAGIC,MAHJ,EAIIC,QAJJ,EAKIC,SALJ,EAMIC,IANJ,EAOIC,GAPJ,KAQK,MAAOC,QAAP,IAAoB;EAErB,IAAI;IAEA,MAAMC,GAAG,GAAG,MAAMV,gBAAgB,CAACW,MAAjB,CAAwB;MAEtCT,IAFsC;MAGtCC,OAHsC;MAItCC,MAJsC;MAKtCC,QALsC;MAMtCC,SANsC;MAOtCC,IAPsC;MAQtCC;IARsC,CAAxB,CAAlB;IAYAC,QAAQ,CAAC;MAELG,IAAI,EAAEhB,eAFD;MAILiB,OAAO,EAAEH,GAAG,CAACI;IAJR,CAAD,CAAR;IAQA,OAAOC,OAAO,CAACC,OAAR,CAAgBN,GAAG,CAACI,IAApB,CAAP;EAEH,CAxBD,CAwBE,OAAOG,GAAP,EAAY;IAEV,OAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP;EAEH;AAEJ,CAzCE;AA2CP,OAAO,MAAME,iBAAiB,GAAG,MAAM,MAAOV,QAAP,IAAoB;EAEvD,IAAI;IAEA,MAAMC,GAAG,GAAG,MAAMV,gBAAgB,CAACoB,MAAjB,EAAlB;IAEAX,QAAQ,CAAC;MAELG,IAAI,EAAEf,kBAFD;MAILgB,OAAO,EAAEH,GAAG,CAACI;IAJR,CAAD,CAAR;EAQH,CAZD,CAYE,OAAOG,GAAP,EAAY;IAEVI,OAAO,CAACC,GAAR,CAAYL,GAAZ;EAEH;AAEJ,CApBM;AAsBP,OAAO,MAAMM,cAAc,GAAG,CAACC,EAAD,EAAKV,IAAL,KAAc,MAAOL,QAAP,IAAoB;EAE5D,IAAI;IAEA,MAAMC,GAAG,GAAG,MAAMV,gBAAgB,CAACyB,MAAjB,CAAwBD,EAAxB,EAA4BV,IAA5B,CAAlB;IAEAL,QAAQ,CAAC;MAELG,IAAI,EAAEd,eAFD;MAILe,OAAO,EAAEC;IAJJ,CAAD,CAAR;IAQA,OAAOC,OAAO,CAACC,OAAR,CAAgBN,GAAG,CAACI,IAApB,CAAP;EAEH,CAdD,CAcE,OAAOG,GAAP,EAAY;IAEV,OAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP;EAEH;AAEJ,CAtBM;AAwBP,OAAO,MAAMS,cAAc,GAAIF,EAAD,IAAQ,MAAOf,QAAP,IAAoB;EAEtD,IAAI;IAEA,MAAMT,gBAAgB,CAAC2B,MAAjB,CAAwBH,EAAxB,CAAN;IAEAf,QAAQ,CAAC;MAELG,IAAI,EAAEb,eAFD;MAILc,OAAO,EAAE;QAAEW;MAAF;IAJJ,CAAD,CAAR;EAQH,CAZD,CAYE,OAAOP,GAAP,EAAY;IAEVI,OAAO,CAACC,GAAR,CAAYL,GAAZ;EAEH;AACJ,CAnBM"},"metadata":{},"sourceType":"module"}