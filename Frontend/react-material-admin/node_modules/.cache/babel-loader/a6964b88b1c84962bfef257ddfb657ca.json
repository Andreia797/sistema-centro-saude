{"ast":null,"code":"import { CREATE_MEDICO, RETRIEVE_MEDICOS, UPDATE_MEDICO, DELETE_MEDICO } from \"./actionTypes\";\nimport MedicosService from \"./medicosService\";\nexport const createMedico = (nome, cod_doc, telemovel, morada, data_nasc, sexo, especialidade, doc) => async dispatch => {\n  try {\n    const res = await MedicosService.create({\n      nome,\n      cod_doc,\n      telemovel,\n      morada,\n      data_nasc,\n      sexo,\n      especialidade,\n      doc\n    });\n    dispatch({\n      type: CREATE_MEDICO,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const retrieveMedicos = () => async dispatch => {\n  try {\n    const res = await MedicosService.getAll();\n    dispatch({\n      type: RETRIEVE_MEDICOS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateMedico = (id, data) => async dispatch => {\n  try {\n    const res = await MedicosService.update(id, data);\n    dispatch({\n      type: UPDATE_MEDICO,\n      payload: data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const deleteMedico = id => async dispatch => {\n  try {\n    await MedicosService.delete(id);\n    dispatch({\n      type: DELETE_MEDICO,\n      payload: {\n        id\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["CREATE_MEDICO","RETRIEVE_MEDICOS","UPDATE_MEDICO","DELETE_MEDICO","MedicosService","createMedico","nome","cod_doc","telemovel","morada","data_nasc","sexo","especialidade","doc","dispatch","res","create","type","payload","data","Promise","resolve","err","reject","retrieveMedicos","getAll","console","log","updateMedico","id","update","deleteMedico","delete"],"sources":["C:/Users/TOSHIBA/Desktop/AndreiaEIC/3ºAnoEIC/2º Simest/DAW/projectDAW_122756/CentroSaude/Frontend/react-material-admin/src/connections/medicos/actions.js"],"sourcesContent":["import {\r\n\r\n    CREATE_MEDICO,\r\n\r\n    RETRIEVE_MEDICOS,\r\n\r\n    UPDATE_MEDICO,\r\n\r\n    DELETE_MEDICO,\r\n\r\n} from \"./actionTypes\";\r\n\r\nimport MedicosService from \"./medicosService\";\r\n\r\nexport const createMedico =\r\n    (\r\n        nome, \r\n        cod_doc, \r\n        telemovel, \r\n        morada,  \r\n        data_nasc, \r\n        sexo,\r\n        especialidade, \r\n        doc,\r\n    ) => async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const res = await MedicosService.create({\r\n\r\n                nome,\r\n                cod_doc,\r\n                telemovel,\r\n                morada,\r\n                data_nasc,\r\n                sexo,\r\n                especialidade,\r\n                doc,\r\n\r\n            });\r\n\r\n            dispatch({\r\n\r\n                type: CREATE_MEDICO,\r\n\r\n                payload: res.data,\r\n\r\n            });\r\n\r\n            return Promise.resolve(res.data);\r\n\r\n        } catch (err) {\r\n\r\n            return Promise.reject(err);\r\n\r\n        }\r\n\r\n    };\r\n\r\nexport const retrieveMedicos = () => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        const res = await MedicosService.getAll();\r\n\r\n        dispatch({\r\n\r\n            type: RETRIEVE_MEDICOS,\r\n\r\n            payload: res.data,\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        console.log(err);\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const updateMedico = (id, data) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        const res = await MedicosService.update(id, data);\r\n\r\n        dispatch({\r\n\r\n            type: UPDATE_MEDICO,\r\n\r\n            payload: data,\r\n\r\n        });\r\n\r\n        return Promise.resolve(res.data);\r\n\r\n    } catch (err) {\r\n\r\n        return Promise.reject(err);\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const deleteMedico = (id) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        await MedicosService.delete(id);\r\n\r\n        dispatch({\r\n\r\n            type: DELETE_MEDICO,\r\n\r\n            payload: { id },\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        console.log(err);\r\n\r\n    }\r\n};"],"mappings":"AAAA,SAEIA,aAFJ,EAIIC,gBAJJ,EAMIC,aANJ,EAQIC,aARJ,QAUO,eAVP;AAYA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAO,MAAMC,YAAY,GACrB,CACIC,IADJ,EAEIC,OAFJ,EAGIC,SAHJ,EAIIC,MAJJ,EAKIC,SALJ,EAMIC,IANJ,EAOIC,aAPJ,EAQIC,GARJ,KASK,MAAOC,QAAP,IAAoB;EAErB,IAAI;IAEA,MAAMC,GAAG,GAAG,MAAMX,cAAc,CAACY,MAAf,CAAsB;MAEpCV,IAFoC;MAGpCC,OAHoC;MAIpCC,SAJoC;MAKpCC,MALoC;MAMpCC,SANoC;MAOpCC,IAPoC;MAQpCC,aARoC;MASpCC;IAToC,CAAtB,CAAlB;IAaAC,QAAQ,CAAC;MAELG,IAAI,EAAEjB,aAFD;MAILkB,OAAO,EAAEH,GAAG,CAACI;IAJR,CAAD,CAAR;IAQA,OAAOC,OAAO,CAACC,OAAR,CAAgBN,GAAG,CAACI,IAApB,CAAP;EAEH,CAzBD,CAyBE,OAAOG,GAAP,EAAY;IAEV,OAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP;EAEH;AAEJ,CA3CE;AA6CP,OAAO,MAAME,eAAe,GAAG,MAAM,MAAOV,QAAP,IAAoB;EAErD,IAAI;IAEA,MAAMC,GAAG,GAAG,MAAMX,cAAc,CAACqB,MAAf,EAAlB;IAEAX,QAAQ,CAAC;MAELG,IAAI,EAAEhB,gBAFD;MAILiB,OAAO,EAAEH,GAAG,CAACI;IAJR,CAAD,CAAR;EAQH,CAZD,CAYE,OAAOG,GAAP,EAAY;IAEVI,OAAO,CAACC,GAAR,CAAYL,GAAZ;EAEH;AAEJ,CApBM;AAsBP,OAAO,MAAMM,YAAY,GAAG,CAACC,EAAD,EAAKV,IAAL,KAAc,MAAOL,QAAP,IAAoB;EAE1D,IAAI;IAEA,MAAMC,GAAG,GAAG,MAAMX,cAAc,CAAC0B,MAAf,CAAsBD,EAAtB,EAA0BV,IAA1B,CAAlB;IAEAL,QAAQ,CAAC;MAELG,IAAI,EAAEf,aAFD;MAILgB,OAAO,EAAEC;IAJJ,CAAD,CAAR;IAQA,OAAOC,OAAO,CAACC,OAAR,CAAgBN,GAAG,CAACI,IAApB,CAAP;EAEH,CAdD,CAcE,OAAOG,GAAP,EAAY;IAEV,OAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP;EAEH;AAEJ,CAtBM;AAwBP,OAAO,MAAMS,YAAY,GAAIF,EAAD,IAAQ,MAAOf,QAAP,IAAoB;EAEpD,IAAI;IAEA,MAAMV,cAAc,CAAC4B,MAAf,CAAsBH,EAAtB,CAAN;IAEAf,QAAQ,CAAC;MAELG,IAAI,EAAEd,aAFD;MAILe,OAAO,EAAE;QAAEW;MAAF;IAJJ,CAAD,CAAR;EAQH,CAZD,CAYE,OAAOP,GAAP,EAAY;IAEVI,OAAO,CAACC,GAAR,CAAYL,GAAZ;EAEH;AACJ,CAnBM"},"metadata":{},"sourceType":"module"}